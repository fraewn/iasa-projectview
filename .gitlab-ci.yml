variables:
  GIT_CLEAN_FLAGS: -ffdx -e node_modules/ -e .m2/repository/
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository/

stages:
  - dependencies
  - compile
  - test
  - package
  - build

npm:
  tags:
    - docker
  image: node:latest
  stage: dependencies
  script: npm install
  cache:
    key: npm
    paths:
      - node_modules/
    policy: push
  only:
    changes:
      - package.json
      - package-lock.json

maven:
  tags:
    - docker
  image: maven:3.6.3-jdk-8
  stage: dependencies
  before_script:
    - chmod a+x ./mvnw
  script: ./mvnw dependency:resolve
  cache:
    key: maven
    paths:
      - .m2/repository/
    policy: push
  only:
    changes:
      - pom.xml

compile-angular:
  tags:
    - docker
  image: node:latest
  stage: compile
  script: node_modules/.bin/ng build --prod
  artifacts:
    expire_in: 12 hours
    paths:
      - src/server/resources/static/
  cache:
    key: npm
    policy: pull
  dependencies:
    - npm

compile-kotlin:
  tags:
    - docker
  image: maven:3.6.3-jdk-8
  stage: compile
  before_script:
    - chmod a+x ./mvnw
  script: ./mvnw compile
  artifacts:
    expire_in: 12 hours
    paths:
      - target/classes
      - target/generated-sources
      - target/maven-status
  cache:
    key: maven
    policy: pull-push

#test-angular:
#  image: node:latest
#  stage: test
#  script:
#    - ls

test-kotlin:
  tags:
    - docker
  image: maven:3.6.3-jdk-8
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: iasa-projectview-test #do not change (or change in pipeline variable too)
    POSTGRES_USER: runner #do not change (or change in pipeline variable too)
    POSTGRES_HOST_AUTH_METHOD: trust
  stage: test
  before_script:
    - chmod a+x ./mvnw
    - mkdir -p config/
    - touch config/application.yml
    - cp $APPLICATION_PROPERTIES_FILE_PATH config/application.yml
    - cat config/application.yml
  script: ./mvnw test
  dependencies:
    - compile-kotlin
  allow_failure: true

package:
  tags:
    - docker
  image: maven:3.6.3-jdk-8
  stage: package
  before_script:
    - chmod a+x ./mvnw
  script: ./mvnw install -Dmaven.test.skip=true
  dependencies:
    - compile-kotlin
    - compile-angular
  artifacts:
    expire_in: 12 hours
    paths:
      - target/projectview-0.0.1.jar
  cache:
    key: maven
    policy: pull

build-docker:
  tags:
    - shell
  stage: build
  script: docker ps
  dependencies:
    - package
